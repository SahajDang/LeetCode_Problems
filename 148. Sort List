/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if(head == null || head.next == null) return head;
        int size = 0;
        ListNode temp = head;
        while(temp != null){
            size++;
            temp = temp.next;
        }
        int arr[] = new int[size];
        temp = head;
        for(int i = 0; i < size; i++){
            arr[i] = temp.val;
            temp = temp.next;
        }

        Arrays.sort(arr);
        head = null;
        ListNode tail = null;

        for (int i = 0; i < arr.length; i++) {
            ListNode newNode = new ListNode(arr[i]);

            if (head == null) {
                head = newNode;     
                tail = newNode;     
            } else {
                tail.next = newNode; 
                tail = newNode;      
            }
        }
        return head;
    }
}
