/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        int size = 0;
        ListNode temp = head;
        while (temp != null) {
            size++;
            temp = temp.next;
        }
        int baseSize = size / k;
        int extra = size % k;

        ListNode[] result = new ListNode[k];
        ListNode current = head;

        for (int i = 0; i < k; i++) {
            int partSize = baseSize + (i < extra ? 1 : 0);
            if (partSize == 0) {
                result[i] = null;
            } else {
                result[i] = current;
                ListNode prev = null;
                for (int j = 0; j < partSize; j++) {
                    prev = current;
                    current = current.next;
                }
                prev.next = null;
            }
        }
        return result;
    }
}
